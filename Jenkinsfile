pipeline {
    agent none  // –û—Ç–∫–ª—é—á–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π –∞–≥–µ–Ω—Ç

    stages {
        // –≠—Ç–∞–ø—ã Test –∏ Build –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
        stage('Test') {
            agent any  // –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–∞ –ª—é–±–æ–º –∞–≥–µ–Ω—Ç–µ
            steps {
                echo 'üß™ Running tests...'
                sh './mvnw test'
            }
            post {
                always {
                    junit '**/target/surefire-reports/*.xml'
                }
            }
        }

        stage('Build') {
            agent any
            steps {
                echo 'üî® Building JAR...'
                sh './mvnw clean package -DskipTests'
            }
            post {
                success {
                    archiveArtifacts 'target/*.jar'
                }
            }
        }

        // –ù–æ–≤—ã–π —ç—Ç–∞–ø: —Å–±–æ—Ä–∫–∞ Docker-–æ–±—Ä–∞–∑–∞ —á–µ—Ä–µ–∑ DinD
        stage('Docker Build') {
            agent {
                docker {
                    image 'docker:dind'  // –ò—Å–ø–æ–ª—å–∑—É–µ–º DinD-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
                    args '--privileged -v /var/run/docker.sock:/var/run/docker.sock'
                }
            }
            steps {
                echo 'üê≥ Building Docker image...'
                script {
                    // –°–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑ (Dockerfile –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞)
                    sh 'docker build -t my-app:latest .'
                }
            }
        }
    }
}
