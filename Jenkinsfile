pipeline {
    agent any

    environment {
        DOCKER_HUB_REPO = 'vicryabenko/devops01'
    }
    
    stages {
        
        stage('Test') {
            steps {
                echo 'üß™ Running tests with Maven...'
                sh 'chmod +x mvnw'
                sh './mvnw test'
            }
            post {
                always {
                    junit '**/target/surefire-reports/*.xml'
                }
            }
        }
        
        stage('Build') {
            steps {
                echo 'üî® Building JAR artifact...'
                sh './mvnw clean package -DskipTests'  // –°–±–æ—Ä–∫–∞ –±–µ–∑ –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ —Ç–µ—Å—Ç–æ–≤
            }
            post {
                success {
                    archiveArtifacts 'target/*.jar'
                }
            }
        }
        
        stage('Docker Build & Push') {
            steps {
                script {
                    // –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–Ω–æ–µ –∏–º—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
                    def imageName = "vicryabenko/devops01:${env.BUILD_ID}" 
                    
                    docker.withRegistry('https://registry.hub.docker.com', 'docker-hub-credentials') {
                        // –°–æ–±–∏—Ä–∞–µ–º –æ–±—Ä–∞–∑
                        def image = docker.build(imageName)
                        
                        // –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–≥ latest
                        docker.image(imageName).tag('latest')
                        
                        // –ü—É—à–∏–º –æ–±–∞ —Ç–µ–≥–∞
                        image.push()
                        docker.image(imageName).push('latest')
                    }
                }
            }
        }
    }

    post {
        success {
            echo "‚úÖ Success! Image pushed to Docker Hub: ${env.DOCKER_HUB_REPO}:${env.BUILD_ID}"
        }
        failure {
            echo "‚ùå Pipeline failed. Check logs for details."
        }
    }
}
